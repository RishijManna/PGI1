# Generated by Django 5.2 on 2025-08-27 10:16

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('my_app', '0023_remove_exam_category_remove_exam_location_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='exam',
            name='category',
            field=models.CharField(choices=[('Engineering', 'Engineering'), ('Medical', 'Medical'), ('Civil Services', 'Civil Services'), ('Management', 'Management'), ('Law', 'Law'), ('Employment', 'Employment'), ('Banking', 'Banking'), ('Defense', 'Defense'), ('Teaching', 'Teaching'), ('Science', 'Science'), ('Design', 'Design'), ('Insurance', 'Insurance'), ('Food Corporation', 'Food Corporation'), ('Agriculture', 'Agriculture'), ('Hotel Management', 'Hotel Management'), ('Environment', 'Environment')], default='Engineering', max_length=50),
        ),
        migrations.AddField(
            model_name='exam',
            name='location',
            field=models.CharField(choices=[('All India', 'All India'), ('Delhi', 'Delhi'), ('Bengaluru', 'Bengaluru'), ('Hyderabad', 'Hyderabad'), ('Maharashtra', 'Maharashtra'), ('West Bengal', 'West Bengal'), ('Ahmedabad', 'Ahmedabad'), ('Multiple Cities', 'Multiple Cities'), ('Vellore', 'Vellore'), ('Bhubaneswar', 'Bhubaneswar'), ('Telangana', 'Telangana'), ('Andhra Pradesh', 'Andhra Pradesh'), ('Odisha', 'Odisha'), ('Gujarat', 'Gujarat'), ('Chhattisgarh', 'Chhattisgarh'), ('Madhya Pradesh', 'Madhya Pradesh'), ('Uttarakhand', 'Uttarakhand'), ('Kerala', 'Kerala'), ('Tamil Nadu', 'Tamil Nadu'), ('Rural India', 'Rural India'), ('Coastal Cities', 'Coastal Cities')], default='All India', max_length=100),
        ),
        migrations.AlterField(
            model_name='exam',
            name='exam_type',
            field=models.CharField(choices=[('Government', 'Government'), ('Private', 'Private'), ('State Level', 'State Level'), ('National Level', 'National Level'), ('University Level', 'University Level'), ('Professional', 'Professional')], default='Government', max_length=50),
        ),
        migrations.AlterField(
            model_name='exam',
            name='mode',
            field=models.CharField(choices=[('Online', 'Online'), ('Offline', 'Offline')], default='Offline', max_length=20),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='category',
            field=models.CharField(choices=[('Education', 'Education'), ('Entrepreneurship', 'Entrepreneurship'), ('Health', 'Health'), ('Employment', 'Employment'), ('General', 'General'), ('Finance', 'Finance'), ('Housing', 'Housing'), ('Welfare', 'Welfare'), ('Insurance', 'Insurance'), ('Pension', 'Pension'), ('Environment', 'Environment'), ('Scholarships', 'Scholarships')], default='General', max_length=50),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='eligibility',
            field=models.CharField(blank=True, choices=[('10th Pass', '10th Pass'), ('12th Pass', '12th Pass'), ('Graduate', 'Graduate'), ('18+ years, Low Income', '18+ years, Low Income'), ('BPL Families', 'BPL Families'), ('SC/ST/Women', 'SC/ST/Women'), ('Rural Population', 'Rural Population'), ('Senior Citizens', 'Senior Citizens'), ('Widows', 'Widows'), ('Disabled', 'Disabled'), ('18-50 years', '18-50 years'), ('18-70 years', '18-70 years'), ('18-40 years', '18-40 years'), ('Farmers', 'Farmers'), ('State Residents', 'State Residents'), ('Girl Students', 'Girl Students'), ('Girls from BPL families', 'Girls from BPL families'), ('Graduate, Unemployed', 'Graduate, Unemployed'), ('All Residents', 'All Residents'), ('Startups registered in Delhi', 'Startups registered in Delhi'), ('Schools and Colleges', 'Schools and Colleges'), ('Forest Departments, NGOs', 'Forest Departments, NGOs'), ('Households, Institutions, Industries', 'Households, Institutions, Industries'), ('Graduates, Post-graduates', 'Graduates, Post-graduates'), ('12th Pass with Science background', '12th Pass with Science background'), ('Class 12 passed with 90%+ marks', 'Class 12 passed with 90%+ marks'), ('MTech/MSc with 8.0 CGPA', 'MTech/MSc with 8.0 CGPA'), ('Age 14-25 years with sports achievements', 'Age 14-25 years with sports achievements'), ('Age 10-25 years with cultural achievements', 'Age 10-25 years with cultural achievements'), ('Single girl child, family income < 6 LPA', 'Single girl child, family income < 6 LPA'), ('SC/ST students with family income < 2.5 LPA', 'SC/ST students with family income < 2.5 LPA'), ('OBC students with family income < 1 LPA', 'OBC students with family income < 1 LPA'), ('Minority community students, family income < 2 LPA', 'Minority community students, family income < 2 LPA'), ('40% or more disability, pursuing education', '40% or more disability, pursuing education'), ('Startups, NGOs, Researchers', 'Startups, NGOs, Researchers'), ('MTech/PhD in Environmental Science', 'MTech/PhD in Environmental Science'), ('Research Institutions, Universities', 'Research Institutions, Universities'), ('Farmers with minimum 1 acre land', 'Farmers with minimum 1 acre land'), ('Individual buyers, Fleet operators', 'Individual buyers, Fleet operators'), ('Registered startups in renewable energy', 'Registered startups in renewable energy')], max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='location',
            field=models.CharField(choices=[('All India', 'All India'), ('Delhi', 'Delhi'), ('Bengaluru', 'Bengaluru'), ('Hyderabad', 'Hyderabad'), ('Maharashtra', 'Maharashtra'), ('West Bengal', 'West Bengal'), ('Kerala', 'Kerala'), ('Rural India', 'Rural India')], default='All India', max_length=100),
        ),
        migrations.AlterField(
            model_name='scheme',
            name='scheme_type',
            field=models.CharField(choices=[('Scholarship', 'Scholarship'), ('Loan', 'Loan'), ('Welfare', 'Welfare'), ('Central Government', 'Central Government'), ('Training', 'Training'), ('State Government', 'State Government'), ('Pension', 'Pension'), ('Insurance', 'Insurance'), ('Financial Assistance', 'Financial Assistance'), ('Allowance', 'Allowance'), ('Subsidy', 'Subsidy'), ('Conservation', 'Conservation'), ('Afforestation', 'Afforestation'), ('Renewable Energy', 'Renewable Energy'), ('Merit-based', 'Merit-based'), ('Research', 'Research'), ('Sports', 'Sports'), ('Arts', 'Arts'), ('Gender-based', 'Gender-based'), ('Social Welfare', 'Social Welfare'), ('Inclusive Education', 'Inclusive Education'), ('Innovation', 'Innovation'), ('Agriculture', 'Agriculture'), ('Transport', 'Transport'), ('Entrepreneurship', 'Entrepreneurship')], default='Central Government', max_length=50),
        ),
    ]
